"""Add league templates table

Revision ID: 87a6bcb58a8e
Revises: fix_tips_dismissed
Create Date: 2025-10-07 10:40:19.893925

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '87a6bcb58a8e'
down_revision = 'fix_tips_dismissed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before creating
    from sqlalchemy import inspect
    bind = op.get_bind()
    inspector = inspect(bind)

    if 'league_templates' not in inspector.get_table_names():
        op.create_table('league_templates',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('club_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('tour', sa.String(length=20), nullable=False),
        sa.Column('entry_fee', sa.Float(), nullable=False),
        sa.Column('max_entries', sa.Integer(), nullable=True),
        sa.Column('bucket_a_picks', sa.Integer(), nullable=False),
        sa.Column('bucket_b_picks', sa.Integer(), nullable=False),
        sa.Column('bucket_c_picks', sa.Integer(), nullable=False),
        sa.Column('bucket_d_picks', sa.Integer(), nullable=False),
        sa.Column('bucket_e_picks', sa.Integer(), nullable=False),
        sa.Column('is_public', sa.Boolean(), nullable=True),
        sa.Column('require_payment', sa.Boolean(), nullable=True),
        sa.Column('tiebreaker_question', sa.String(length=500), nullable=True),
        sa.Column('payout_structure', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('times_used', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    # Fix foreign key if table exists with wrong constraint
    if 'league_templates' in inspector.get_table_names():
        # Drop old foreign key constraint and create new one
        try:
            with op.batch_alter_table('league_templates', schema=None) as batch_op:
                # Try to drop the old constraint (it may have a generated name)
                try:
                    batch_op.drop_constraint('league_templates_club_id_fkey', type_='foreignkey')
                except:
                    pass
                # Add the correct foreign key
                batch_op.create_foreign_key(
                    'league_templates_club_id_fkey',
                    'clubs',
                    ['club_id'],
                    ['id']
                )
        except Exception as e:
            print(f"Foreign key update skipped: {e}")

    # Check if indexes exist before creating
    if 'league_templates' in inspector.get_table_names():
        existing_indexes = [idx['name'] for idx in inspector.get_indexes('league_templates')]

        with op.batch_alter_table('league_templates', schema=None) as batch_op:
            if 'idx_template_club' not in existing_indexes:
                batch_op.create_index('idx_template_club', ['club_id'], unique=False)
            if 'idx_template_name' not in existing_indexes:
                batch_op.create_index('idx_template_name', ['name'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('league_templates', schema=None) as batch_op:
        batch_op.drop_index('idx_template_name')
        batch_op.drop_index('idx_template_club')

    op.drop_table('league_templates')
    # ### end Alembic commands ###
